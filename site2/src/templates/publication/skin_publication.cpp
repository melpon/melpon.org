#line 1 "templates/publication/home.tmpl"
#include "home.h" 
#line 2 "templates/publication/home.tmpl"
namespace melpon_org_publication {
	#line 3 "templates/publication/home.tmpl"
	struct home :public cppcms::base_view
	#line 3 "templates/publication/home.tmpl"
	{
	#line 3 "templates/publication/home.tmpl"
		content::publication::home &content;
	#line 3 "templates/publication/home.tmpl"
		home(std::ostream &_s,content::publication::home &_content): cppcms::base_view(_s),content(_content)
	#line 3 "templates/publication/home.tmpl"
		{
	#line 3 "templates/publication/home.tmpl"
		}
		#line 5 "templates/publication/home.tmpl"
		virtual void render() {
			#line 43 "templates/publication/home.tmpl"
			out()<<"\n"
				"<div class=\"row\">\n"
				"  <div class=\"col-sm-offset-1 col-sm-10\">\n"
				"    <div .page-header>\n"
				"      <h1>公開資料</h1>\n"
				"    </div>\n"
				"    <ul>\n"
				"      <li>\n"
				"        <a href=\"http://d.hatena.ne.jp/melpon/20091212/1260584012\">Boost.Coroutine</a>\n"
				"        （<a href=\"https://sites.google.com/site/boostjp/study_meeting/study1\">Boost.勉強会 #1</a>）\n"
				"      </li>\n"
				"\n"
				"      <li>\n"
				"        <a href=\"http://d.hatena.ne.jp/melpon/20110508/1304813069\">Squirrelと変人の神隠し</a>\n"
				"        （<a href=\"http://atnd.org/events/14697\">関西ゲームプログラミング勉強会 #oustudy</a>）\n"
				"      </li>\n"
				"\n"
				"      <li>\n"
				"        <a href=\"http://www.slideshare.net/melpon/boostinterfaces-na-5179597\">Boost.Interfaces</a>\n"
				"        （<a href=\"https://sites.google.com/site/boostjp/study_meeting/study2\">Boost.勉強会 #2</a>）\n"
				"      </li>\n"
				"\n"
				"      <li>\n"
				"        <a href=\"http://www.slideshare.net/melpon/boosttimer-7068526\">Boost.Timer</a>\n"
				"        （<a href=\"https://sites.google.com/site/boostjp/study_meeting/study4\">Boost.勉強会 #4 東京</a>）\n"
				"      </li>\n"
				"\n"
				"      <li>\n"
				"        <a href=\"http://d.hatena.ne.jp/melpon/20120423/1335187810\">MighttpdのEventSource問題</a>\n"
				"        （<a href=\"http://partake.in/events/76f421e7-c3ca-49bf-b28e-f9ede8032f0b\">(祝) Yesod 1.0 勉強会</a>）\n"
				"      </li>\n"
				"\n"
				"      <li>\n"
				"        <a href=\"https://docs.google.com/presentation/d/1SzdoJYEN-i9asivCtaWLLjtO_T6Ch2KOXbuZs8MY_Tw/edit?usp=sharing\">Effective STL 11</a>\n"
				"        （<a href=\"https://sites.google.com/site/boostjp/study_meeting/study9\">Boost.勉強会 #9 つくば</a>）\n"
				"      </li>\n"
				"\n"
				"      <li>\n"
				"        <a href=\"";
			#line 43 "templates/publication/home.tmpl"
			content.app().mapper().map(out(),"wandbox");
			#line 59 "templates/publication/home.tmpl"
			out()<<"\">Wandbox を支える技術</a>\n"
				"        （<a href=\"https://sites.google.com/site/boostjp/study_meeting/study13\">Boost.勉強会 #13 仙台</a>）\n"
				"      </li>\n"
				"\n"
				"      <li>\n"
				"        <a href=@{PKabukizaWandboxLtR}>Wandbox の紹介</a>\n"
				"        （<a href=\"http://ch.nicovideo.jp/dwango-engineer/blomaga/ar393478\">歌舞伎座.tech#2</a>）\n"
				"      </li>\n"
				"\n"
				"      <li>\n"
				"        <a href=\"@{PCpprefjpR}\">cpprefjp を支える技術</a>\n"
				"        （<a href=\"https://sites.google.com/site/boostjp/study_meeting/study14\">Boost.勉強会 #14</a>）\n"
				"      </li>\n"
				"    </ul>\n"
				"  </div>\n"
				"</div>\n"
				"";
		#line 59 "templates/publication/home.tmpl"
		} // end of template render
	#line 61 "templates/publication/home.tmpl"
	}; // end of class home
#line 62 "templates/publication/home.tmpl"
} // end of namespace melpon_org_publication
#line 1 "templates/publication/wandbox.tmpl"
#include "wandbox.h" 
#line 2 "templates/publication/wandbox.tmpl"
namespace melpon_org_publication {
	#line 3 "templates/publication/wandbox.tmpl"
	struct wandbox :public cppcms::base_view
	#line 3 "templates/publication/wandbox.tmpl"
	{
	#line 3 "templates/publication/wandbox.tmpl"
		content::publication::wandbox &content;
	#line 3 "templates/publication/wandbox.tmpl"
		wandbox(std::ostream &_s,content::publication::wandbox &_content): cppcms::base_view(_s),content(_content)
	#line 3 "templates/publication/wandbox.tmpl"
		{
	#line 3 "templates/publication/wandbox.tmpl"
		}
		#line 5 "templates/publication/wandbox.tmpl"
		virtual void render() {
			#line 17 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"<html>\n"
				"  <head>\n"
				"    <title>Wandboxを支える技術</title>\n"
				"    <meta charset=\"utf-8\"></meta>\n"
				"    <meta http-equiv=\"X-UA-Compatible\" content=\"chrome=1\"></meta>\n"
				"    <!--<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0\">-->\n"
				"    <!--<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">-->\n"
				"    <!--This one seems to work all the time, but really small on ipad-->\n"
				"    <!--<meta name=\"viewport\" content=\"initial-scale=0.4\">-->\n"
				"    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\"></meta>\n"
				"    <base target=\"_blank\"> <!-- This amazingness opens all links in a new tab. --> </base>\n"
				"    ";
			#line 17 "templates/publication/wandbox.tmpl"
			includes();
			#line 21 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"  </head>\n"
				"  <body style=\"opacity: 0\">\n"
				"    <slides class=\"layout-widescreen\">\n"
				"      ";
			#line 21 "templates/publication/wandbox.tmpl"
			wandbox_render();
			#line 27 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"      <slide class=\"backdrop\">\n"
				"      </slide>\n"
				"    </slides>\n"
				"  </body>\n"
				"</html>\n"
				"";
		#line 27 "templates/publication/wandbox.tmpl"
		} // end of template render
		#line 29 "templates/publication/wandbox.tmpl"
		virtual void includes() {
			#line 30 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"<link rel=\"stylesheet\" href=\"";
			#line 30 "templates/publication/wandbox.tmpl"
			content.app().mapper().topmost().map(out(), "static"); 
			#line 31 "templates/publication/wandbox.tmpl"
			out()<<"/publication/css/wandbox.css\">\n"
				"<link rel=\"stylesheet\" href=\"";
			#line 31 "templates/publication/wandbox.tmpl"
			content.app().mapper().topmost().map(out(), "static"); 
			#line 32 "templates/publication/wandbox.tmpl"
			out()<<"/publication/io-2012-slides/theme/css/default.css\">\n"
				"<link rel=\"stylesheet\" href=\"";
			#line 32 "templates/publication/wandbox.tmpl"
			content.app().mapper().topmost().map(out(), "static"); 
			#line 33 "templates/publication/wandbox.tmpl"
			out()<<"/publication/io-2012-slides/theme/css/phone.css\" media=\"only screen and (max-device-width: 480px)\">\n"
				"<script src=\"";
			#line 33 "templates/publication/wandbox.tmpl"
			content.app().mapper().topmost().map(out(), "static"); 
			#line 33 "templates/publication/wandbox.tmpl"
			out()<<"/publication/io-2012-slides/js/require-1.0.8.min.js\" data-main=\"";
			#line 33 "templates/publication/wandbox.tmpl"
			content.app().mapper().topmost().map(out(), "static"); 
			#line 34 "templates/publication/wandbox.tmpl"
			out()<<"/publication/js/wandbox-slides\"></script>\n"
				"";
		#line 34 "templates/publication/wandbox.tmpl"
		} // end of template includes
		#line 36 "templates/publication/wandbox.tmpl"
		virtual void wandbox_render() {
			#line 48 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"<slide class=\"title-slide segue nobackground\">\n"
				"  <hgroup class=\"auto-fadein\">\n"
				"    <h1 data-config-title>\n"
				"    </h1>\n"
				"    <h2 data-config-subtitle>\n"
				"    </h2>\n"
				"    <p data-config-presenter>\n"
				"    </p>\n"
				"  </hgroup>\n"
				"</slide>\n"
				"\n"
				"";
			#line 48 "templates/publication/wandbox.tmpl"
			wandbox_ui();
			#line 50 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"";
			#line 50 "templates/publication/wandbox.tmpl"
			wandbox_internal();
			#line 52 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"";
			#line 52 "templates/publication/wandbox.tmpl"
			wandbox_server();
			#line 67 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"<slide>\n"
				"  <article class=\"takahashi flexbox vcenter\">\n"
				"    <h1>質問</h1>\n"
				"  </article>\n"
				"</slide>\n"
				"\n"
				"<slide class=\"thank-you-slide segue\">\n"
				"  <article class=\"flexbox vleft\">\n"
				"    <h2>&lt;Thank You!&gt;</h2>\n"
				"    <p>Important contact information goes here.</p>\n"
				"  </article>\n"
				"  <p data-config-contact></p>\n"
				"</slide>\n"
				"";
		#line 67 "templates/publication/wandbox.tmpl"
		} // end of template wandbox_render
		#line 69 "templates/publication/wandbox.tmpl"
		virtual void wandbox_ui() {
			#line 270 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"<slide class=\"segue dark\">\n"
				"  <hgroup>\n"
				"    <h2>Wandbox とは\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>普通の C++ 使いは日常的に仕様書を読んでいる\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>その際、実際にコンパイラを動かして試したくなる場合がある\n"
				"    </h3>\n"
				"    <h3>例:\n"
				"    </h3>\n"
				"    <ul>\n"
				"      <li>「ISO/IEC 14882:2011 における 3.4.2/2 が結果がどうなるのかよく分からないな」\n"
				"      </li>\n"
				"      <li>「現行の gcc/clang でどういう動作をするのか試してみたい」\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>普通の C++ 使いは日常的に paper を読んでいる\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>その際、実際にコンパイラを動かして試したくなる場合がある\n"
				"    </h3>\n"
				"    <h3>例:\n"
				"    </h3>\n"
				"    <ul>\n"
				"      <li>「<a href=\"http://isocpp.org/files/papers/N3648.html\">N3648</a> が gcc で実装されたのか」\n"
				"      </li>\n"
				"      <li>「最新の gcc でどういう動作をするのか試したい」\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>普通の C++ 使いは日常的にコンパイラのバグを報告している\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>その際、実際にコンパイラを動かして試したくなる場合がある\n"
				"    </h3>\n"
				"    <h3>例:\n"
				"    </h3>\n"
				"    <ul>\n"
				"      <li>「<a href=\"http://gcc.gnu.org/bugzilla/show_bug.cgi?id=58302\"><code>std::negative_binomial_distribution</code> がコンパイルエラーになるバグ</a>って直ったんだっけ？」\n"
				"      </li>\n"
				"      <li>「最新の gcc で直ってるかどうか試したい」\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <article class=\"takahashi flexbox vcenter\">\n"
				"    <h1 class=\"red\">そこで Wandbox\n"
				"    </h1>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>Wandbox とは\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <ul>\n"
				"      <li><a href=\"http://melpon.org/wandbox/\">http://melpon.org/wandbox/</a>\n"
				"      </li>\n"
				"      <li>オンラインコンパイラ\n"
				"      </li>\n"
				"      <li>要するに <a href=\"http://ideone.com/\">ideone</a> みたいなやつ\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>Wandbox とは\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>特徴\n"
				"    </h3>\n"
				"    <ul>\n"
				"      <li>C++ 対応がすごい\n"
				"        <ul>\n"
				"          <li>gcc, clang の様々なバージョン\n"
				"          </li>\n"
				"          <li>gcc HEAD, clang HEAD にも対応（毎日ビルド）\n"
				"          </li>\n"
				"          <li><a href=\"http://bolero-murakami.github.io/Sprout/\">Boost</a>, <a href=\"http://www.boost.org/\">Sprout</a> ライブラリに対応\n"
				"          </li>\n"
				"          <li>多彩なコンパイルオプション\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"      <li>他の言語にもいろいろ対応\n"
				"      </li>\n"
				"      <li>リアルタイム出力\n"
				"      </li>\n"
				"      <li>キーバインディング選択\n"
				"      </li>\n"
				"      <li>パーマネントリンクと Twitter への投稿\n"
				"      </li>\n"
				"      <li>シンタックスハイライト\n"
				"      </li>\n"
				"      <li class=\"red\">はやい（確信）\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <article class=\"takahashi flexbox vcenter\">\n"
				"    <h1><a href=\"http://melpon.org/wandbox/\">デモ</a>\n"
				"    </h1>\n"
				"  </article>\n"
				"  <aside class=\"note\">\n"
				"    <ul>\n"
				"      <li>前ページのそれぞれの機能について話す\n"
				"      </li>\n"
				"      <li>はやい（確信）について話す\n"
				"        <ul>\n"
				"          <li>ideone で何か実行して、clone してちょっと修正して再実行までに掛かる時間を測る\n"
				"          </li>\n"
				"          <li>Wandbox で何か実行して、ちょっと修正して再実行までに掛かる時間を測る\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"    </ul>\n"
				"  </aside>\n"
				"</slide>\n"
				"<slide>\n"
				"  <article class=\"takahashi flexbox vcenter\">\n"
				"    <h1 class=\"red\">【重要】普通の C++ 使い以外の方もお使い頂けます【必読】\n"
				"    </h1>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>C++/Python/Haskell/etc などの言語を勉強するとき\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>でもコンパイラとかの入れ方が分からない/入れるのがめんどい\n"
				"    </h3>\n"
				"    <h3 class=\"red\">そこで Wandbox\n"
				"    </h3>\n"
				"    <ul>\n"
				"      <li>\n"
				"        <p>コード入力→実行のサイクルを繰り返しやすい\n"
				"        </p>\n"
				"        <p>→勉強に最適\n"
				"        </p>\n"
				"      </li>\n"
				"      <li>\n"
				"        <p>分からないことがあったら気軽に Twitter に投稿できる\n"
				"        </p>\n"
				"        <p>→きっと誰か答えてくれるはず\n"
				"        </p>\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>誰かの質問にコードで答えるとき\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>例:\n"
				"    </h3>\n"
				"    <h3>Q.「vector には push_back して clear してもメモリが解放されないバグがある！C++ はクソだ！」\n"
				"    </h3>\n"
				"    <h3>A.「キャパシティの概念を理解しましょう。<a href=\"http://melpon.org/wandbox/permlink/Xm93gD3bsW2hPaet\">こんな感じ</a> 」\n"
				"    </h3>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <article class=\"takahashi flexbox vcenter\">\n"
				"    <h1 class=\"red\">Wandbox を使おう！\n"
				"    </h1>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>要望やバグについて\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <p><a href=\"https://github.com/melpon/wandbox/issues\">issues</a> に登録するか <a href=\"https://twitter.com/melponn\">@melponn</a> まで\n"
				"    </p>\n"
				"  </article>\n"
				"</slide>\n"
				"";
		#line 270 "templates/publication/wandbox.tmpl"
		} // end of template wandbox_ui
		#line 272 "templates/publication/wandbox.tmpl"
		virtual void wandbox_internal() {
			#line 280 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"<slide class=\"segue dark\">\n"
				"  <hgroup>\n"
				"    <h2>Wandbox の中身\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"</slide>\n"
				"\n"
				"";
			#line 280 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_slide(),0);
			#line 282 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"";
			#line 282 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_slide(),"relation");
			#line 286 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 286 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"relation");
			#line 326 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>Wandbox は、大きく２つのモジュールに分けられる\n"
				"    </h3>\n"
				"    <ul class=\"build\">\n"
				"      <li>牛舎（<a href=\"https://github.com/melpon/wandbox/tree/master/cattleshed\">cattleshed</a>）\n"
				"        <ul>\n"
				"          <li>ソースを与えるとコンパイルや実行をして結果を返してくれるモジュール\n"
				"          </li>\n"
				"          <li>Wandbox のコア\n"
				"          </li>\n"
				"          <li><a href=\"https://twitter.com/kikairoya\">@kikairoya</a> 作\n"
				"          </li>\n"
				"          <li>C++ で書かれてる\n"
				"          </li>\n"
				"          <li>読めない\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"      <li>犬小屋（<a href=\"https://github.com/melpon/wandbox/tree/master/kennel\">kennel</a>）\n"
				"        <ul>\n"
				"          <li>普通の Web サーバ\n"
				"          </li>\n"
				"          <li>Wandbox の UI\n"
				"          </li>\n"
				"          <li><a href=\"https://twitter.com/melponn\">@melponn</a> 作\n"
				"          </li>\n"
				"          <li>Haskell で書かれてる\n"
				"          </li>\n"
				"          <li>読めない\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <article class=\"flexbox vcenter\">\n"
				"    <img class=\"reflect\" src=\"";
			#line 326 "templates/publication/wandbox.tmpl"
			content.app().mapper().topmost().map(out(), "static"); 
			#line 331 "templates/publication/wandbox.tmpl"
			out()<<"/publication/img/wandbox-actor.png\" alt=\"牛舎と犬小屋の関係\">\n"
				"    </img>\n"
				"  </article>\n"
				"</slide>\n"
				"\n"
				"";
			#line 331 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_slide(),"cattleshed");
			#line 335 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 335 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"cattleshed");
			#line 361 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <ul>\n"
				"      <li class=\"red\">よく分からない仕組みで動いてる\n"
				"      </li>\n"
				"      <li>基本的にはコンパイルして実行するだけ\n"
				"      </li>\n"
				"      <li>ほんとに何でもできてしまうと困るので、制限を掛けたりしている\n"
				"        <ul>\n"
				"          <li>chroot を使って環境を閉じ込める\n"
				"          </li>\n"
				"          <li>実行時間が長いなら kill\n"
				"          </li>\n"
				"          <li>リソース使用量が多いなら kill\n"
				"          </li>\n"
				"          <li>標準出力量が多いなら kill\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 361 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"cattleshed");
			#line 371 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article class=\"flexbox vcenter\">\n"
				"    <h2>詳しいことは <a href=\"https://twitter.com/kikairoya\">@kikairoya</a> を問い詰めよう\n"
				"    </h2>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 371 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"cattleshed");
			#line 386 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>本人曰く\n"
				"    </h3>\n"
				"    <ul>\n"
				"      <li><a href=\"https://twitter.com/kikairoya/status/391142370080608256\">Twitter / kikairoya: @melponn 自由でオープンなソフトウェアなので誰でも内部を理解し、応用することができます</a>\n"
				"      </li>\n"
				"    </ul>\n"
				"    <h3>誰か内部を理解して教えて下さい。\n"
				"    </h3>\n"
				"  </article>\n"
				"</slide>\n"
				"\n"
				"";
			#line 386 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_slide(),"yesod");
			#line 390 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 390 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"yesod");
			#line 424 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3><a href=\"http://www.yesodweb.com/\">Yesod</a> という Haskell の Web フレームワークで作ってる\n"
				"    </h3>\n"
				"    <div class=\"build\">\n"
				"      <h3>なぜなら\n"
				"      </h3>\n"
				"      <ul>\n"
				"        <li class=\"build\">あの頃はまだ純粋な Haskell 信者だった\n"
				"          <ul>\n"
				"            <li>型安全すごい\n"
				"            </li>\n"
				"            <li>関数合成楽しい\n"
				"            </li>\n"
				"            <li>モナドさん可愛い\n"
				"            </li>\n"
				"          </ul>\n"
				"        </li>\n"
				"        <li class=\"build\">Haskell できますって言いたかった\n"
				"          <ul>\n"
				"            <li>Haskell できるとかっこ良さそう\n"
				"            </li>\n"
				"            <li>Haskell できると彼女できるという噂が\n"
				"            </li>\n"
				"          </ul>\n"
				"        </li>\n"
				"      </ul>\n"
				"    </div>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 424 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"yesod");
			#line 461 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3><a href=\"http://www.yesodweb.com/\">Yesod</a> という Haskell の Web フレームワークで作ってる\n"
				"    </h3>\n"
				"    <h3>実際のところ\n"
				"    </h3>\n"
				"    <ul>\n"
				"      <li class=\"context\">あの頃はまだ純粋な Haskell 信者だった\n"
				"      </li>\n"
				"      <li class=\"build\">→副作用を知ってから Haskell はただの難しい言語\n"
				"        <ul>\n"
				"          <li>あの純粋な気持ちはどこへ\n"
				"          </li>\n"
				"          <li>とはいえ、やはりいろいろ便利な言語ではある\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"      <li class=\"context\">Haskell できますって言いたかった\n"
				"      </li>\n"
				"      <li class=\"build\">→この程度だと Haskell できますとか言えない\n"
				"        <ul>\n"
				"          <li>未だにモナドの作り方分からない\n"
				"          </li>\n"
				"          <li>未だに型の読み方が分からない\n"
				"          </li>\n"
				"          <li>それでもこんな Web アプリケーションぐらいなら書ける\n"
				"          </li>\n"
				"          <li>彼女はできませんでしたが嫁はできました\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"\n"
				"";
			#line 461 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_slide(),"templates");
			#line 465 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 465 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"templates");
			#line 479 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>HTML, CSS, JavaScript\n"
				"    </h3>\n"
				"    <ul>\n"
				"      <li>それぞれ hamlet, lucius, julius という Yesod のテンプレート言語がある\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 479 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"templates");
			#line 485 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>hamlet\n"
				"    </h3>\n"
				"    <pre class=\"prettyprint lang-html\" data-lang=\"hamlet\">";
			#line 485 "templates/publication/wandbox.tmpl"
			out()<<cppcms::filters::escape(content.source_hamlet_sample1());
			#line 498 "templates/publication/wandbox.tmpl"
			out()<<"</pre>\n"
				"    <ul>\n"
				"      <li>インデントベースの HTML\n"
				"      </li>\n"
				"      <li>class と id の省略表記\n"
				"      </li>\n"
				"      <li>直接書いても辛くない\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 498 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"templates");
			#line 504 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>hamlet\n"
				"    </h3>\n"
				"    <pre class=\"prettyprint lang-html\" data-lang=\"html\">";
			#line 504 "templates/publication/wandbox.tmpl"
			out()<<cppcms::filters::escape(content.source_hamlet_sample1_html());
			#line 513 "templates/publication/wandbox.tmpl"
			out()<<"</pre>\n"
				"    <ul>\n"
				"      <li>HTML はつらい\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 513 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"templates");
			#line 519 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>hamlet\n"
				"    </h3>\n"
				"    <pre class=\"prettyprint lang-html\" data-lang=\"hamlet\">";
			#line 519 "templates/publication/wandbox.tmpl"
			out()<<cppcms::filters::escape(content.source_hamlet_sample2());
			#line 530 "templates/publication/wandbox.tmpl"
			out()<<"</pre>\n"
				"    <ul>\n"
				"      <li>Haskell コードの埋め込み\n"
				"      </li>\n"
				"      <li>最低限の制御構文\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 530 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"templates");
			#line 536 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>lucius\n"
				"    </h3>\n"
				"    <pre class=\"prettyprint lang-css\" data-lang=\"lucius\">";
			#line 536 "templates/publication/wandbox.tmpl"
			out()<<cppcms::filters::escape(content.source_lucius_sample());
			#line 549 "templates/publication/wandbox.tmpl"
			out()<<"</pre>\n"
				"    <ul>\n"
				"      <li>大体ただの CSS\n"
				"      </li>\n"
				"      <li>CSS コピペでも動くレベル\n"
				"      </li>\n"
				"      <li>変数も宣言できる\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 549 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"templates");
			#line 555 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>lucius\n"
				"    </h3>\n"
				"    <pre class=\"prettyprint lang-css\" data-lang=\"css\">";
			#line 555 "templates/publication/wandbox.tmpl"
			out()<<cppcms::filters::escape(content.source_lucius_sample_css());
			#line 564 "templates/publication/wandbox.tmpl"
			out()<<"</pre>\n"
				"    <ul>\n"
				"      <li>こんなコードになる\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 564 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"templates");
			#line 570 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>julius\n"
				"    </h3>\n"
				"    <pre class=\"prettyprint lang-javascript\" data-lang=\"julius\">";
			#line 570 "templates/publication/wandbox.tmpl"
			out()<<cppcms::filters::escape(content.source_julius_sample());
			#line 580 "templates/publication/wandbox.tmpl"
			out()<<"</pre>\n"
				"    <ul>\n"
				"      <li>ほぼ JavaScript\n"
				"      </li>\n"
				"      <li>Haskell コードを埋め込める\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"\n"
				"";
			#line 580 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_slide(),"eventsource");
			#line 584 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 584 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"eventsource");
			#line 590 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>リアルタイム出力\n"
				"    </h3>\n"
				"    <pre class=\"prettyprint lang-haskell\" data-lang=\"haskell\">";
			#line 590 "templates/publication/wandbox.tmpl"
			out()<<cppcms::filters::escape(content.source_loop_sample());
			#line 601 "templates/publication/wandbox.tmpl"
			out()<<"</pre>\n"
				"    <ul>\n"
				"      <li>コードの実行中に出力が表示される\n"
				"      </li>\n"
				"      <li>フィードバックが早いので手を止めずに済む\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 601 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"eventsource");
			#line 625 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>リアルタイム出力の仕組み\n"
				"    </h3>\n"
				"    <ul>\n"
				"      <li><a href=\"http://www.w3.org/TR/eventsource/\">EventSource</a> を使ってる\n"
				"      </li>\n"
				"      <li>要するに単なるロングポーリング\n"
				"        <ul>\n"
				"          <li>普通の HTTP はサーバがレスポンスを返したら終わり\n"
				"          </li>\n"
				"          <li>EventSource はレスポンスを最初は途中までしか返さない\n"
				"          </li>\n"
				"          <li>受信が終わってないのでクライアントはデータを待ち続ける\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 625 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"eventsource");
			#line 644 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>普通のデータの受信\n"
				"    </h3>\n"
				"    <pre data-lang=\"request\"><code>GET /wandbox HTTP/1.1</code></pre>\n"
				"    <pre data-lang=\"response\" class=\"pre-normal\">\n"
				"      <code>\n"
				"        HTTP/1.1 200 OK<br/>\n"
				"        <span class=\"red\">Content-Type: application/json</span><br/>\n"
				"        <span class=\"red\">Content-Length: 221<br/>\n"
				"        <br/>\n"
				"        {“hoge”: “fuga”, ...}</span>\n"
				"      </code></pre>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 644 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"eventsource");
			#line 681 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>ロングポーリングによる受信\n"
				"    </h3>\n"
				"    <pre data-lang=\"request\"><code>GET /wandbox/source HTTP/1.1</code></pre>\n"
				"    <pre data-lang=\"response\" class=\"pre-normal\">\n"
				"      <code class=\"build\">\n"
				"        <span>\n"
				"          HTTP/1.1 200 OK<br/>\n"
				"          <span class=\"red\">Content-Type: text/event-stream</span><br/>\n"
				"          <span class=\"red\">Transfer-Encoding: chunked</span><br/>\n"
				"          <br/>\n"
				"        </span>\n"
				"        <span>\n"
				"          <span class=\"red\">001A<br/>\n"
				"          data: hogefuga_hogefuga_ho</span><br/>\n"
				"        </span>\n"
				"        <span>\n"
				"          <span class=\"red\">0018<br/>\n"
				"          gefuga_hogefuga<br/>\n"
				"          data: c</span><br/>\n"
				"        </span>\n"
				"        <span>\n"
				"          <span class=\"red\">0010<br/>\n"
				"          constexpr</span><br/>\n"
				"        </span>\n"
				"        <span>\n"
				"          <span class=\"red\">0</span>\n"
				"        </span>\n"
				"      </code>\n"
				"    </pre>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 681 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"eventsource");
			#line 698 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>ロングポーリングによる受信\n"
				"    </h3>\n"
				"    <pre data-lang=\"request\"><code>GET /wandbox/source HTTP/1.1</code></pre>\n"
				"    <pre data-lang=\"response-text\" class=\"pre-normal\">\n"
				"      <code>\n"
				"        data: hogefuga_hogefuga_hogefuga_hogefuga<br/>\n"
				"        data: constexpr\n"
				"      </code>\n"
				"    </pre>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 698 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"eventsource");
			#line 717 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>Q. WebSocket 使わないの？\n"
				"    </h3>\n"
				"    <h3>A. この型の意味を理解できる者だけが WebSocket を使いなさい\n"
				"    </h3>\n"
				"    <pre class=\"prettyprint lang-haskell\" data-lang=\"haskell\"><code>\n"
				"        intercept :: Protocol p\n"
				"        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt; (Request -&gt; WebSockets p ())\n"
				"        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt; Request\n"
				"        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt; Maybe (Source (ResourceT IO) ByteString -&gt; Connection -&gt; ResourceT IO ())\n"
				"      </code></pre>\n"
				"    <footer class=\"source\"><a href=\"http://hackage.haskell.org/package/wai-websockets/docs/Network-Wai-Handler-WebSockets.html\">Network.Wai.Handler.WebSockets</a>\n"
				"    </footer>\n"
				"  </article>\n"
				"</slide>\n"
				"\n"
				"";
			#line 717 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_slide(),"kurou");
			#line 721 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 721 "templates/publication/wandbox.tmpl"
			out()<<content.internal(content.index_title(),"kurou");
			#line 777 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <ul class=\"build\">\n"
				"      <li>Yesod に苦労した\n"
				"        <ul>\n"
				"          <li>#yesodinstallbattle\n"
				"          </li>\n"
				"          <li>バージョン変わりすぎ\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"      <li>HTML/CSS/JavaScript に苦労した\n"
				"        <ul>\n"
				"          <li>まともに触ったことが無いので大変\n"
				"          </li>\n"
				"          <li>どう組むのが一般的なのか分からなくて大変\n"
				"          </li>\n"
				"          <li>みんな適当にやってるっぽいと気がついたので適当に組んだ\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"      <li>ドキュメントが無くて苦労した\n"
				"        <ul>\n"
				"          <li><a href=\"https://twitter.com/melponn/status/134903468593913856\">Twitter / melponn: Haskell では ...</a>\n"
				"          </li>\n"
				"          <li><a href=\"https://twitter.com/melponn/status/171922845226643456\">Twitter / melponn: Haskellerのドキュメントは、型がドキュメントになると ...</a>\n"
				"          </li>\n"
				"          <li><a href=\"http://hackage.haskell.org/package/hamlet/docs/Text-Hamlet.html\">Text.Hamlet</a>\n"
				"          </li>\n"
				"          <li><a href=\"http://hackage.haskell.org/package/yesod-auth-1.2.0.2/docs/Yesod-Auth.html#v:defaultMaybeAuthId\">Yesod.Auth</a>\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>まとめ\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <ul>\n"
				"      <li>Wandbox は牛舎と犬小屋が協調して動いてる\n"
				"      </li>\n"
				"      <li>牛舎は <a href=\"https://twitter.com/kikairoya\">@kikairoya</a> を問い詰めよう\n"
				"      </li>\n"
				"      <li>犬小屋は普通の Web サーバ\n"
				"      </li>\n"
				"      <li>犬小屋を建てるのはなかなか大変だった\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"";
		#line 777 "templates/publication/wandbox.tmpl"
		} // end of template wandbox_internal
		#line 779 "templates/publication/wandbox.tmpl"
		virtual void wandbox_server() {
			#line 787 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"<slide class=\"segue dark\">\n"
				"  <hgroup>\n"
				"    <h2>Wandbox のサーバ構成\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"</slide>\n"
				"\n"
				"";
			#line 787 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_slide(),0);
			#line 789 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"";
			#line 789 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_slide(),"all");
			#line 793 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 793 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_title(),"all");
			#line 829 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article class=\"build\">\n"
				"    <h3>ユーザが Run すると…\n"
				"    </h3>\n"
				"    <ul>\n"
				"      <li>→<a href=\"http://mew.org/~kazu/proj/mighttpd/en/\">Mighttpd</a>\n"
				"        <ul>\n"
				"          <li>→犬小屋\n"
				"            <ul>\n"
				"              <li>→牛舎\n"
				"                <ul>\n"
				"                  <li>→各種コンパイラ\n"
				"                  </li>\n"
				"                  <li>←各種コンパイラ\n"
				"                  </li>\n"
				"                </ul>\n"
				"              </li>\n"
				"              <li>←牛舎\n"
				"              </li>\n"
				"            </ul>\n"
				"          </li>\n"
				"          <li>←犬小屋\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"      <li>←Mighttpd\n"
				"      </li>\n"
				"    </ul>\n"
				"    <h3>Mighttpd って何？\n"
				"    </h3>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 829 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_title(),"mighttpd");
			#line 851 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <ul>\n"
				"      <li>HTTP サーバ\n"
				"      </li>\n"
				"      <li>Haskell 製の nginx みたいな感じ\n"
				"      </li>\n"
				"      <li>静的ファイルを高速転送したり\n"
				"      </li>\n"
				"      <li>リバースプロキシしたり\n"
				"        <ul>\n"
				"          <li class=\"red\">これ目的で使ってる\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 851 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_title(),"mighttpd");
			#line 855 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article class=\"flexbox vcenter\">\n"
				"    <img class=\"reflect\" src=\"";
			#line 855 "templates/publication/wandbox.tmpl"
			content.app().mapper().topmost().map(out(), "static"); 
			#line 855 "templates/publication/wandbox.tmpl"
			out()<<"/publication/img/mighttpd.001.png\" alt=\"";
			#line 855 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_title(),"mighttpd");
			#line 861 "templates/publication/wandbox.tmpl"
			out()<<"\">\n"
				"    </img>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 861 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_title(),"mighttpd");
			#line 865 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article class=\"flexbox vcenter\">\n"
				"    <img class=\"reflect\" src=\"";
			#line 865 "templates/publication/wandbox.tmpl"
			content.app().mapper().topmost().map(out(), "static"); 
			#line 865 "templates/publication/wandbox.tmpl"
			out()<<"/publication/img/mighttpd.002.png\" alt=\"";
			#line 865 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_title(),"mighttpd");
			#line 870 "templates/publication/wandbox.tmpl"
			out()<<"\">\n"
				"    </img>\n"
				"  </article>\n"
				"</slide>\n"
				"\n"
				"";
			#line 870 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_slide(),"chef");
			#line 874 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 874 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_title(),"chef");
			#line 898 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <ul>\n"
				"      <li>サーバの構成管理には <a href=\"http://www.opscode.com/chef/\">Chef</a> を使ってる\n"
				"      </li>\n"
				"      <li>これを使って Mighttpd 入れたり Wandbox 入れたり各種コンパイラ入れてる\n"
				"      </li>\n"
				"      <li>理論的にはサーバが死んでも簡単に復元できるはず\n"
				"        <ul>\n"
				"          <li>※ただし SQLite のデータを除く\n"
				"          </li>\n"
				"          <li>（パーマネントリンクを作るためにコードや結果などを SQLite に入れてる）\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"      <li>melpon.org の Cookbook はここ: <a href=\"https://github.com/melpon/chef-melpon.org\">melpon/chef-melpon.org</a>\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 898 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_title(),"chef");
			#line 941 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>Chef で入れているレシピの例\n"
				"    </h3>\n"
				"    <ul>\n"
				"      <li>スワップファイル\n"
				"      </li>\n"
				"      <li>Wandbox の実行環境\n"
				"        <ul>\n"
				"          <li>ユーザ作成\n"
				"          </li>\n"
				"          <li>github から取得\n"
				"          </li>\n"
				"          <li>ビルド\n"
				"          </li>\n"
				"          <li>デーモンとして起動（Upstart を使ってる）\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"      <li>各種コンパイラ\n"
				"        <ul>\n"
				"          <li>GCC, Clang, Python, Ruby\n"
				"            <ul>\n"
				"              <li>ソースからビルド\n"
				"              </li>\n"
				"            </ul>\n"
				"          </li>\n"
				"          <li>GCC-HEAD, Clang-HEAD, Erlang-HEAD\n"
				"            <ul>\n"
				"              <li>最新リポジトリから取ってきてビルド\n"
				"              </li>\n"
				"              <li>ビルドを毎日行うように cron を設定\n"
				"              </li>\n"
				"            </ul>\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"\n"
				"";
			#line 941 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_slide(),"deploy");
			#line 945 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 945 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_title(),"deploy");
			#line 969 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <ul>\n"
				"      <li>GitHub の <a href=\"https://help.github.com/articles/post-receive-hooks\">Post-Receive Hooks</a> を使ってる\n"
				"      </li>\n"
				"      <li>GitHub リポジトリへの push が発生したら指定した URL を叩いてくれる\n"
				"      </li>\n"
				"      <li>その URL を受ける口として <a href=\"https://github.com/melpon/ghwebhook\">melpon/ghwebhook</a> というサーバを用意\n"
				"        <ul>\n"
				"          <li>Python 製\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"      <li>ghwebhook は melpon/wandbox の master ブランチに push されたら特定のスクリプトを実行する\n"
				"      </li>\n"
				"      <li>スクリプト内で wandbox を pull してビルドして再起動\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>";
			#line 969 "templates/publication/wandbox.tmpl"
			out()<<content.server(content.index_title(),"deploy");
			#line 1017 "templates/publication/wandbox.tmpl"
			out()<<"\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <h3>デプロイを試してみる\n"
				"    </h3>\n"
				"    <ul>\n"
				"      <li>このセッション資料も ghwebhook で管理されている\n"
				"      </li>\n"
				"      <li>なので変更して push すると反映されるはず\n"
				"      </li>\n"
				"    </ul>\n"
				"    <ul>\n"
				"      <li>この辺のテキストを弄ってみたよーん\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"<slide>\n"
				"  <hgroup>\n"
				"    <h2>まとめ\n"
				"    </h2>\n"
				"  </hgroup>\n"
				"  <article>\n"
				"    <ul>\n"
				"      <li>melpon.org サーバのフロントには Mighttpd が居て、そこからリバースプロキシをしている\n"
				"      </li>\n"
				"      <li>サーバは Chef で管理されている\n"
				"        <ul>\n"
				"          <li>コンパイラも Chef を使って管理\n"
				"          </li>\n"
				"        </ul>\n"
				"      </li>\n"
				"      <li>デプロイには GitHub の Post-Receive Hooks を使っている\n"
				"      </li>\n"
				"    </ul>\n"
				"    <h3>感想\n"
				"    </h3>\n"
				"    <ul>\n"
				"      <li>サーバ管理が一番面倒だった\n"
				"      </li>\n"
				"      <li>正直 Wandbox 作るより時間が掛かったと思う\n"
				"      </li>\n"
				"      <li>が、手間を掛けただけあって大分楽になった\n"
				"      </li>\n"
				"    </ul>\n"
				"  </article>\n"
				"</slide>\n"
				"";
		#line 1017 "templates/publication/wandbox.tmpl"
		} // end of template wandbox_server
	#line 1019 "templates/publication/wandbox.tmpl"
	}; // end of class wandbox
#line 1020 "templates/publication/wandbox.tmpl"
} // end of namespace melpon_org_publication
#line 1021 "templates/publication/wandbox.tmpl"
namespace {
#line 1021 "templates/publication/wandbox.tmpl"
 cppcms::views::generator my_generator; 
#line 1021 "templates/publication/wandbox.tmpl"
 struct loader { 
#line 1021 "templates/publication/wandbox.tmpl"
  loader() { 
#line 1021 "templates/publication/wandbox.tmpl"
   my_generator.name("melpon_org_publication");
#line 1021 "templates/publication/wandbox.tmpl"
   my_generator.add_view<melpon_org_publication::home,content::publication::home>("home",true);
#line 1021 "templates/publication/wandbox.tmpl"
   my_generator.add_view<melpon_org_publication::wandbox,content::publication::wandbox>("wandbox",true);
#line 1021 "templates/publication/wandbox.tmpl"
    cppcms::views::pool::instance().add(my_generator);
#line 1021 "templates/publication/wandbox.tmpl"
 }
#line 1021 "templates/publication/wandbox.tmpl"
 ~loader() {  cppcms::views::pool::instance().remove(my_generator); }
#line 1021 "templates/publication/wandbox.tmpl"
} a_loader;
#line 1021 "templates/publication/wandbox.tmpl"
} // anon 
